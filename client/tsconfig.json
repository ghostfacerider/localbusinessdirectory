{
  "compilerOptions": {
    "types": ["react", "react-dom"],
    "typeRoots": ["node_modules/@types", "src/types"],
    "baseUrl": "src",
    "paths": {
      "*": ["types/*"]
    },
    "target": "ES6", // Target modern JavaScript (ES6) for better performance
    "lib": ["dom", "dom.iterable", "esnext"], // Enable ESNext features and DOM support
    "allowJs": true, // Allow JavaScript files to be compiled
    "skipLibCheck": true, // Skip type checking of declaration files for faster builds
    "esModuleInterop": true, // Allow default imports from modules with no default export
    "allowSyntheticDefaultImports": true, // Allow synthetic default imports for CommonJS modules
    "strict": true, // Enable all strict type-checking options
    "forceConsistentCasingInFileNames": true, // Ensure consistent casing for file names
    "module": "esnext", // Use ESNext modules for better tree-shaking support
    "moduleResolution": "node", // Resolve modules the same way Node.js does
    "resolveJsonModule": true, // Allow importing JSON files as modules
    "isolatedModules": true, // Ensure all files are isolated as independent modules
    "jsx": "react-jsx", // Enable React JSX Transform for React 17 or later
    "skipDefaultLibCheck": true, // Skip checking of default library files for better performance
    "noEmit": true, // Do not emit output (useful for type-checking only)
    "noUnusedLocals": true, // Report errors on unused local variables
    "noUnusedParameters": true, // Report errors on unused function parameters
    "noImplicitReturns": true, // Ensure all functions have a return statement or throw an error
    "noImplicitAny": true, // Disallow the 'any' type unless explicitly defined
    "strictFunctionTypes": true, // Ensure stricter function typing rules
    "strictBindCallApply": true // Ensure stricter checking of `bind`, `call`, and `apply`
  },
  "include": ["src/**/*"],
  "exclude": [
    "node_modules", // Exclude node_modules to prevent unnecessary type checking
    "build", // Exclude build folder (if any)
    "dist" // Exclude dist folder (if any)
  ]
}
